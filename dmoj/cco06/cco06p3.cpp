/**
 *
 *
 * https://en.wikipedia.org/wiki/Huffman_coding#/media/File:Huffman_coding_visualisation.svg
 * https://en.wikipedia.org/wiki/Arithmetic_coding#Adaptive_arithmetic_coding
 */
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <cstdint>
#include <iterator>
#include <string_view>
#include <array>
#include <queue>
#include <forward_list>

using UT = std::uint64_t;
using ST = std::int64_t;

constexpr char firstContext = '\n';

[[nodiscard]] char decodeNum(const std::uint8_t num) {
	if (num == 0)
		return '\n';
	else
		return 31 + num;
}

[[nodiscard]] std::uint8_t encodeChar(const char c) {
	if (c == '\n')
		return 0;
	else
		return c - 31;
}

// We are creating a huffman tree
class HuffmanTree {
	private:
		struct Node {
			// This is the mapped char value.
			// 255 means nothing, but it's outside the range
			std::uint8_t val{255};
			
			// We are just using non owning pointers here,
			// the nodes will live as long as the huffman tree does.
			// It is worth nothing that either both of these are set
			// or none are.
			Node* left{nullptr};
			Node* right{nullptr};

			Node() = default;
			explicit Node(std::uint8_t v) : val{v} {}


			[[nodiscard]] bool isLeaf() const {
				return left == nullptr;
			}
		};
	
		// This stores all the nodes, except the root node.
		// This needs to be a list and not a vector, because we are
		// keeping the points to these elements in it.
		std::forward_list<Node> nodes_;
	
		// This is our root nodes, it always exist.
		struct Node* root_{nullptr};

	public:
		HuffmanTree(const std::array<std::uint64_t, 96>& weights) {
			using PR = std::pair<std::uint64_t, struct Node*>;
			std::priority_queue<PR, std::vector<PR>, std::greater<PR>> Q;
			
			for (UT i = 0; i < 96; i++) {
				nodes_.emplace_front(i);
				Q.emplace(weights[i], &nodes_.front());
			}

			// ok now we have all the nodes and their pointers.
			while (1 < Q.size()) {
				// We take the two first elements.
				const auto a = Q.top(); Q.pop();
				const auto b = Q.top(); Q.pop();

				// Now we create the new node that we want.
				nodes_.emplace_front();
				auto& fr = nodes_.front();

				fr.left = a.second;
				fr.right = b.second;

				Q.emplace(a.first + b.first, &fr);
			}

			root_ = Q.top().second;
		}

		// Returns the bit string for each symbol.
		[[nodiscard]] std::array<std::string, 96> buildCodes() const {
			std::array<std::string, 96> codes;
			using PR = std::pair<std::string, Node*>;
			std::queue<PR> Q;
			Q.emplace("", root_);

			while (!Q.empty()) {
				const auto [prefix, node] = Q.front();
				Q.pop();

				if (node->isLeaf()) {
					codes[node->val] = prefix;
					continue;
				}

				Q.emplace(prefix + "0", node->left);
				Q.emplace(prefix + "1", node->right);
			}

			return codes;
		}

		[[nodiscard]] std::uint8_t decodeBitStream(std::istreambuf_iterator<char>& it) const {
			std::istreambuf_iterator<char> end;

			Node* cur = root_;
			// we run until end or newline.
			for (; it != end && *it != '\n'; it++) {
				if (cur->isLeaf())
					return cur->val;

				if (*it == '0')
					cur = cur->left;
				else
					cur = cur->right;
			}
			if (cur->isLeaf())
				return cur->val;

			throw std::runtime_error("Invalid input string!");
		}
};

// we are putting this at the bottom, to avoid all the mess in the input.
std::vector<HuffmanTree> TREES;
void build_trees();


void decode_mode() {
	std::istreambuf_iterator<char> it(std::cin), end;
	// Skip first new line after number
	it++;

	// We always assume the first character is a space.
	auto prev = encodeChar(firstContext);

	std::ostringstream buf;
	
	// we run until end or newline.
	while (it != end && *it != '\n') {
		auto cur = TREES[prev].decodeBitStream(it);
		prev = cur;
		buf << decodeNum(cur);
	}

	std::cout << buf.str();
}


void encode_mode() {
	// Prepare all the codes we need to check this.
	std::array<std::array<std::string, 96>, 96> codes;
	for (UT i = 0; i < 96; i++) {
		codes[i] = TREES[i].buildCodes();
	}

	
	std::istreambuf_iterator<char> it(std::cin), end;
	// Skip first new line after number
	it++;
	
	// For the first character, we use the space table.
	auto prev = encodeChar(firstContext);

	std::ostringstream buf;
	for (; it != end; it++) {
		const auto cur = encodeChar(*it);
		buf << codes[prev][cur];
		prev = cur;
	}

	buf << '\n';

	std::cout << buf.str();
}


int main() {
	std::cin.sync_with_stdio(0);
	std::cin.tie(0);

	// Build the 96 trees we need.
	build_trees();

	// We are going to go with a 
	int T = 0;
	std::cin >> T;

	if (T == 1) {
		encode_mode();
	} else if (T == 2) {
		decode_mode();
	}
	
	return 0;
}

// Generated using the `cco06p3-create-weights.py` program.
// 10 = 0, 32 = 1 33 = 2, ....

#ifdef ONLINE_JUDGE
constexpr std::array<std::array<std::uint64_t, 96>, 96> FREQ{{
{8074,7501,1,2994,9,4,0,0,101,95,0,36,103,1,16,58,2,2,46,9,15,7,5,5,2,5,7,0,1,0,39,0,0,0,2408,1607,1278,1007,455,946,480,1403,1128,261,214,725,974,596,1437,614,87,610,1822,2886,243,191,1279,11,145,99,69,8,0,0,0,63,4080,2346,3443,1963,1476,1924,1201,2218,2354,248,379,1325,2039,928,1623,2701,208,1552,4253,4505,485,514,2271,14,295,42,0,0,0,0},
{13091,34927,74,2128,8,183,0,50,349,1041,7,922,16,7,275,395,66,45,417,209,120,76,62,68,77,37,43,11,27,187,108,13,24,2,3628,1742,2267,2088,879,1442,1613,2428,8021,498,325,1425,1862,1014,1088,1630,829,721,2710,3073,272,355,1472,105,435,306,229,97,57,0,2,1101,50620,18498,15418,12655,7550,17743,7899,27590,24486,1294,2981,10290,18034,10189,28168,12289,857,9124,32268,68071,5218,2927,29861,16,6293,79,20,24,19,2},
{258,1584,185,619,0,0,0,0,291,0,32,0,0,0,18,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,4,0,0,2,0,2,0,0,0,0,0},
{2499,2495,6,1,0,1,0,0,32,1,3,0,0,59,14,21,0,2,0,0,0,0,0,0,0,0,0,2,7,0,0,0,4,0,501,164,59,113,49,77,62,184,655,20,15,92,78,191,160,60,1,27,197,448,19,14,425,0,226,12,0,13,0,0,1,3,175,152,26,33,11,104,24,39,121,12,4,25,23,29,31,23,0,19,52,212,6,5,83,0,43,0,1,0,0,1},
{0,1,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,54,1,0,0,0,0,0,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,5,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0},
{1,6,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,12,2,1,3,2,3,3,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,17,0,0,0,0,0,16,0,11,6,3,0,15,32,35,0,18,0,2,2,0,0,0,0,0},
{0,11,0,1,0,0,0,0,0,0,5,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,44,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{443,1265,5,31,0,0,0,0,6,4,29,0,0,8,3,4,0,11,1,1,1,1,1,1,4,1,2,17,23,0,0,0,6,0,23,8,9,11,3,16,6,17,20,1,1,9,10,13,14,6,0,5,44,84,0,1,21,2,6,0,0,32,0,0,0,1,15,5,19,321,90,9,6,9,11,0,0,315,157,4,3,2,0,126,2714,1224,2,135,4,2,3,0,0,0,0,0},
{1,1,3,2,0,9,0,3,1,60,5,41,7,0,10,1,0,0,49,95,22,17,9,19,4,7,5,0,0,0,0,0,2,0,49,13,27,7,6,19,3,3,16,5,3,11,14,42,15,19,2,5,30,27,1,19,13,0,3,1,0,0,0,0,0,5,75,11,30,20,25,94,7,8,49,2,2,23,16,11,22,12,2,4,52,37,2,1,47,2,4,0,0,0,0,1},
{249,707,0,3,0,0,0,0,0,1,77,38,12,185,7,92,1,0,0,3,0,0,0,0,0,0,0,4,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
{173,660,0,0,0,0,0,0,0,50,15,444,1,0,4,2,55,0,24,5,11,4,6,4,9,10,5,39,0,0,0,0,0,0,2,0,7,1,2,4,0,2,3,0,0,2,2,0,0,17,0,1,3,4,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,30,0,0,13,1,0,1,36,0,0,0,1,0,0,0,0,0,0,0},
{102,38,0,0,0,0,0,0,0,0,8,0,7385,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,12,0,5,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
{2910,39724,0,1517,0,0,0,0,478,1,28,0,0,0,81,0,0,53,7,3,5,1,5,0,2,0,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,2,0,0,0,0,0,1,0,0},
{338,310,0,82,0,3,0,0,49,3,11,4,0,2,1235,2,0,18,40,23,16,13,25,28,20,11,11,0,1,0,0,74,4,0,38,5,12,5,8,6,12,23,31,1,0,2,39,8,22,7,0,96,12,9,0,9,12,0,2,5,0,26,1,0,0,7,268,222,202,121,242,157,86,120,82,10,14,179,196,66,141,154,26,120,340,299,64,16,171,4,27,0,0,0,0,0},
{5155,8126,9,1728,0,0,0,0,260,2,77,37,0,60,13,577,2,12,3,5,4,6,15,4,11,1,11,0,1,0,0,0,7,0,3,12,7,2,5,1,2,1,16,5,0,1,2,1,1,2,0,2,17,15,0,0,10,0,2,0,0,0,3,0,0,0,0,4,7,0,33,2,27,10,0,0,0,3,0,6,3,2,0,1,1,0,2,0,0,0,1,0,0,0,0,0},
{55,42,0,0,0,0,0,0,0,0,0,55,0,1,0,1,5,14,2,5,0,0,0,0,0,0,2,0,0,0,0,0,0,0,14,0,7,0,4,0,0,1,7,6,0,1,3,2,2,1,0,0,7,0,0,0,3,1,1,0,1,0,0,0,0,0,0,3,2,2,5,1,0,0,3,0,0,1,0,1,7,0,0,3,4,2,0,1,4,0,0,0,0,0,0,0},
{48,198,1,1,0,0,5,0,31,0,19,2,0,27,44,22,0,269,49,92,24,26,25,19,62,18,10,5,12,0,0,3,1,0,5,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,10,1,0,0,0,4,0,0,1,0,0,0},
{29,132,0,2,0,0,1,0,1,0,87,4,0,34,14,60,5,91,42,58,40,34,33,19,26,28,186,11,9,0,0,14,0,0,1,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,16,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,5,0,0,0},
{39,73,0,0,0,0,2,1,1,8,140,6,0,24,14,28,0,153,30,26,34,21,30,23,17,16,25,6,1,0,0,8,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0},
{41,42,0,0,0,0,1,0,1,0,45,4,0,21,13,16,4,65,27,28,29,24,29,11,18,24,30,6,0,0,0,6,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0},
{23,35,0,0,0,0,0,0,1,0,43,4,0,21,19,25,4,38,18,11,17,16,16,6,9,18,20,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0},
{25,57,0,1,0,0,2,0,1,0,19,1,0,14,23,18,0,63,20,13,24,12,22,16,13,10,6,5,0,0,0,5,0,2,0,0,1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,0,0,0},
{22,32,0,0,0,0,1,0,1,0,21,7,0,6,17,18,0,53,19,12,9,21,12,2,14,12,9,4,1,0,0,3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,0},
{22,38,0,0,0,0,1,0,5,8,11,8,0,10,51,12,0,70,6,5,12,5,14,10,7,20,6,1,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,6,0,0,0},
{24,22,0,0,0,0,2,0,0,0,13,5,0,4,11,14,3,25,10,11,16,13,19,28,23,9,17,3,0,0,0,4,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0},
{18,29,0,1,0,0,3,0,2,0,3,1,0,5,17,39,3,19,28,31,28,28,25,30,18,58,109,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,13,0,0,0},
{673,2048,0,1,0,0,0,0,17,0,8,39,0,0,249,0,5,14,3,4,17,3,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{582,6321,0,67,0,0,0,0,20,0,3,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,1,0,0,1,0,0,1,0,4,1,0,0,0,1,3,0,0,1,0,0,0,0,0,0,0},
{0,10,0,0,168,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
{44,146,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,8,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0},
{5,82,0,0,0,0,0,0,0,0,1,1,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,15,0,3,0,0,0,6,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{634,1402,192,740,0,0,0,0,173,0,14,2,0,3,13,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,770,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,3,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,3,3,0,0,0,2,0,0,0,0,3,0,0,0,0,0,3,3,0,3,0,1,0,0,1,0,0,0,0},
{90,584,0,0,0,0,0,2,7,0,9,0,0,37,1,22,2,3,2,1,3,1,2,0,0,0,0,7,0,0,0,0,0,1,2730,24,125,104,9,7,9,15,62,3,8,374,267,359,9,107,112,268,174,458,231,8,9,1,35,3,0,0,7,0,0,0,197,171,98,264,11,64,96,79,16,1,2,990,243,1995,1,77,4,639,520,243,106,30,26,0,22,9,0,0,0,0},
{2,47,0,0,0,0,0,0,3,0,6,0,0,5,3,9,0,1,26,11,9,2,2,1,1,1,1,1,0,0,0,0,0,0,77,8,2,1,480,1,0,7,20,2,1,20,23,0,58,1,67,46,7,3,6,0,0,0,17,0,0,0,0,0,0,0,239,0,1,0,650,1,0,1,250,0,0,77,0,0,206,0,0,459,0,0,988,0,0,2,268,0,0,0,0,0},
{29,137,0,0,0,0,0,1,25,1,11,0,0,21,3,38,0,0,2,1,0,0,0,0,0,0,0,5,0,0,0,0,0,0,95,12,54,94,310,2,2,415,72,1,207,204,9,2,116,17,0,64,16,65,38,0,2,21,1,1,0,0,0,0,0,0,928,0,0,0,82,0,0,513,112,0,0,198,0,0,997,0,0,110,6,0,76,0,0,0,24,4,0,0,0,0},
{28,181,3,0,0,0,0,0,6,0,7,0,0,24,92,24,1,0,2,0,0,0,0,0,0,0,0,1,3,0,0,109,0,0,194,13,11,3,94,2,1,5,324,1,1,3,1,3,429,32,0,186,11,12,81,19,2,0,5,0,0,0,3,0,28,0,262,0,0,0,417,0,0,1,349,1,0,0,0,1,1483,0,0,79,8,0,199,0,7,0,8,0,0,0,0,0},
{165,418,0,0,0,0,0,0,9,0,2,0,0,31,38,18,0,0,0,0,0,0,0,0,0,0,0,5,1,0,0,0,1,1,170,55,38,387,90,9,5,0,156,0,0,236,47,394,149,5,2,612,454,105,1,21,6,19,64,0,0,0,10,0,0,0,253,1,12,97,1,7,23,1,16,1,2,130,40,235,1,9,16,79,29,49,38,209,2,150,2,3,0,0,0,0},
{7,99,1,0,0,0,0,0,2,1,1,0,0,9,0,4,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,8,9,6,1,12,38,1,0,25,0,0,82,2,1,35,2,0,99,0,3,7,0,0,0,0,0,0,0,0,0,0,0,290,0,0,0,207,0,0,0,262,0,0,105,0,0,961,0,0,434,0,2,87,0,0,0,0,0,0,0,0,0},
{10,44,1,0,0,0,0,0,2,0,1,0,0,13,26,16,0,1,0,1,2,1,3,0,0,0,1,1,0,0,0,0,0,0,47,75,0,0,50,2,17,17,22,1,0,4,64,3,15,4,0,20,12,0,4,0,2,0,0,0,0,0,0,0,0,0,613,1,0,0,98,0,0,5,111,0,0,43,0,1,877,0,0,287,0,0,95,0,2,0,2,0,0,0,0,0},
{11,130,6,1,0,0,0,0,9,0,9,0,0,11,4,15,0,5,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,222,6,1,6,313,2,0,51,147,1,0,0,0,50,74,0,5,10,88,16,1,0,0,0,15,0,0,0,0,0,0,0,532,0,0,0,1749,0,0,0,794,1,0,0,5,0,775,0,0,5,0,0,108,0,0,0,28,0,0,0,0,0},
{339,6842,3,2,0,0,0,0,488,0,13,0,0,92,12,78,5,0,0,2,0,0,0,0,0,0,0,7,10,0,0,0,18,0,192,65,391,154,41,41,44,2,172,0,25,80,257,453,344,12,1,20,181,97,49,90,1,29,0,1,0,7,0,0,2,0,3,4,3,10,2,325,3,0,0,0,1,31,139,1053,4,0,0,33,165,621,0,3,0,2,0,1,0,0,0,0},
{2,20,0,0,0,0,0,0,0,0,0,0,0,12,0,31,1,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,79,1,14,0,1,2,0,1,0,0,0,0,2,0,51,5,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,95,0,0,0,65,0,0,0,5,0,0,0,0,0,191,0,0,6,0,0,253,0,0,0,0,0,0,0,0,0},
{139,43,0,0,0,0,0,0,4,0,2,0,0,37,7,7,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,3,0,2,7,0,1,132,0,5,0,7,0,0,0,0,12,1,1,4,0,11,0,1,0,0,0,1,0,0,0,0,0,0,0,125,1,0,0,71,0,0,6,162,0,0,5,0,108,21,0,0,17,1,0,7,0,0,0,3,0,0,0,0,0},
{10,163,0,1,0,0,0,0,13,0,29,0,0,25,6,22,0,0,0,0,0,0,0,0,0,0,0,2,12,0,0,0,2,0,402,0,116,79,331,3,3,0,469,4,1,88,33,0,38,0,8,2,40,18,30,42,0,0,74,0,0,0,0,0,0,0,381,0,0,0,353,0,0,0,357,0,0,1,0,0,456,0,0,0,0,3,276,0,0,0,19,0,0,0,0,0},
{30,284,0,1,0,0,0,0,45,0,12,0,0,36,8,48,2,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,4,0,145,4,4,11,234,1,0,1,64,4,0,63,2,2,27,9,0,0,13,3,6,0,2,0,27,0,0,0,5,0,0,0,1255,5,102,1,365,0,0,0,253,0,0,0,2,0,520,0,0,37,7,1,114,0,0,0,188,0,0,0,0,0},
{81,497,0,0,0,0,0,0,13,0,7,0,0,26,3,14,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,300,2,100,430,348,14,55,3,113,3,10,3,1,41,37,12,0,48,51,110,37,4,2,0,14,7,0,0,3,0,0,0,370,0,0,1,189,0,1,0,155,0,0,0,0,1,1014,0,0,0,0,0,31,0,0,0,7,0,0,0,0,0},
{516,204,10,1,0,0,0,0,36,0,4,0,0,106,14,0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,12,43,130,32,4,88,77,65,4,14,31,62,119,756,22,15,0,351,238,97,179,10,29,1,4,0,0,0,9,0,0,0,4,29,17,17,4,682,1,200,0,0,4,125,29,362,5,89,0,344,16,41,127,36,6,7,0,1,0,0,0,0},
{24,85,1,0,0,0,0,0,7,4,8,0,0,14,0,7,3,0,3,5,0,0,0,0,0,0,0,1,2,0,0,0,0,0,48,3,45,2,213,0,0,40,2,0,0,35,13,0,53,16,4,18,6,93,9,1,0,0,2,0,0,1,0,0,0,0,564,0,0,0,299,3,0,121,65,0,0,79,0,0,202,0,0,530,3,3,140,0,0,0,15,0,0,0,0,0},
{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,105,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,890,0,0,0,0,0,0,0,0,0},
{45,294,1,1,0,0,0,2,7,0,4,0,0,26,1,35,2,0,3,1,0,0,0,0,0,0,0,4,1,0,0,0,1,1,154,28,25,29,249,3,84,1,254,1,9,205,9,12,598,4,0,75,117,42,10,3,23,0,89,0,0,0,7,0,0,0,159,0,1,1,381,0,0,13,81,0,0,0,4,0,350,0,0,0,1,0,99,0,1,0,7,0,0,0,0,0},
{96,503,2,0,0,0,0,0,8,0,23,0,0,38,0,31,1,0,8,3,0,1,3,1,0,0,0,10,2,0,0,0,0,4,262,7,143,5,143,3,70,40,115,2,34,4,3,5,77,29,4,5,100,146,35,1,3,1,2,3,0,0,16,0,0,0,1022,0,184,0,432,0,0,430,371,0,13,52,38,6,1023,248,6,1,0,363,298,0,44,0,39,3,0,0,0,0},
{85,145,9,1,0,0,0,3,9,0,3,0,0,22,6,10,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,5,0,20,1,11,42,277,4,0,288,307,2,0,17,3,10,406,14,0,163,35,46,26,6,20,1,11,0,0,0,1,0,0,0,111,0,0,0,235,0,0,4457,130,0,0,0,0,0,889,0,0,234,1,0,143,0,79,0,14,0,0,0,0,0},
{6,38,0,0,0,0,0,0,3,0,0,0,0,2,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,5,121,159,164,0,3,1,29,0,66,70,11,17,21,4,0,124,114,16,0,2,0,0,0,0,0,0,4,0,0,0,0,1,6,0,0,0,9,8,0,0,2,19,1,289,0,65,0,34,40,8,0,0,0,0,0,1,0,0,0,0},
{19,5,0,0,0,0,0,0,0,0,0,0,0,2,4,20,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,19,0,2,0,168,0,0,1,72,0,0,2,5,0,2,14,0,0,0,1,0,0,0,0,3,0,0,0,0,0,0,0,80,0,0,0,97,0,0,0,167,0,0,4,0,0,105,0,0,16,1,0,2,0,0,0,0,0,0,0,0,0},
{6,12,1,0,0,0,0,0,0,0,0,0,0,2,0,20,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,67,1,3,2,35,3,1,70,57,2,0,2,0,17,35,4,0,0,1,0,2,1,0,1,4,0,0,0,0,0,0,0,253,0,0,0,456,0,0,1646,689,0,0,0,0,0,227,0,0,26,0,0,4,0,0,0,8,0,0,0,0,0},
{8,10,0,0,0,0,0,0,2,0,0,0,0,1,11,8,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,1,0,0,0,19,0,0,9,0,1,22,22,0,0,0,16,0,13,0,30,0,0,0,0,0,0,0,0,4,0,0,0,39,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{70,136,0,3,0,0,0,0,8,0,0,0,0,20,2,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,5,1,8,1,3,1,1,0,6,0,0,29,6,51,48,0,0,3,7,0,1,0,1,0,0,1,0,0,4,0,0,0,48,0,0,0,280,0,0,0,6,0,0,0,0,0,547,1,0,0,0,0,7,2,0,0,0,0,0,0,0,0},
{2,16,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,7,0,0,0,0,0,1,0,0,0,0,0,0,0,4,1,1,0,1,0,0,0,34,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,229,0,0,0,19,0,0,0,14,0,0,0,0,0,99,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,72,43,20,21,21,11,4,4,3,0,0,0,6,0,0,0,15,0,2,0,92,1,1,0,0,0,0,0,0,0,0,57,0,7,2,21,1,0,0,0,0,0,0,20,1,0,0,0,2,0,2,0,2,4,0,0,1,0,0,6,2,0,0,0,0,2,0,0,0,0,1,0,0,0,0,0,0,0},
{0,0,0,1,0,0,0,0,5,0,0,0,0,0,81,0,0,19,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,7,2,0,4,1,0,2,0,0,0,1,2,5,2,1,2,6,5,0,0,1,0,0,0,0,4,0,0,0,0,0,2,1,0,0,52,0,1,1,0,0,0,0,4,0,2,0,1,1,1,2,1,0,0,0,0,0,0,0,0},
{136,240,0,4,0,0,0,0,0,0,5,0,0,15,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{86571,519262,3019,10267,186,205,19,85,7407,1290,1449,1656,7558,44825,6048,16338,282,1050,989,743,502,364,395,310,349,292,523,3088,7026,193,2734,259,3950,36,12196,4120,5144,4760,5130,2807,2617,5209,13065,844,956,3912,3951,4160,5434,2792,1156,3558,6565,8312,1478,812,3659,224,1311,444,448,232,447,2,70,1180,200766,34325,61717,99830,519266,50941,51565,139816,163910,2625,17950,101173,58938,165530,191668,41303,2376,142791,149778,213266,74684,22618,49027,5011,47216,1765,84,42,40,7},
{0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,4,0,0,0,0,3,0,0,0,0,3,0,0,0,1,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,10,0,0,5,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0},
{0,0,0,5,0,0,0,0,3,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,33,30,25,9,9,7,37,237,2,1,7,9,43,58,13,0,7,41,98,4,5,119,0,58,0,0,0,0,0,0,0,57,27,6,2,2,11,2,8,29,2,0,5,1,8,11,6,0,1,12,32,5,0,18,0,9,0,0,0,0,0},
{1958,10005,62,7,0,0,0,0,125,0,16,0,0,700,87,167,1,0,0,0,0,0,0,0,0,0,0,19,73,0,0,0,15,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,6371,4047,6395,8636,176,1044,3667,341,8993,119,2424,16474,5010,40013,97,3683,30,19359,16925,28564,2263,5023,1484,333,5705,351,0,0,0,0},
{146,230,7,0,0,0,0,0,6,0,1,0,0,73,20,33,10,0,0,0,0,0,0,0,0,0,0,5,9,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2788,396,8,50,9578,3,1,20,2087,206,0,4200,50,14,4039,7,0,2836,701,277,3675,28,2,0,2774,0,0,0,0,0},
{849,946,6,1,0,0,0,0,5,0,17,0,0,74,13,81,0,0,0,0,0,0,0,0,0,0,0,1,10,0,0,0,3,2,3,1,21,11,1,2,11,1,2,0,13,3,5,4,0,2,28,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,7402,2,1209,10,9583,1,0,11274,3133,0,3107,2120,7,13,10935,2,73,2532,198,4844,2548,2,0,0,602,3,0,0,0,0},
{4116,47828,198,19,0,0,0,0,202,0,43,3,0,5207,317,1677,12,0,0,0,0,0,0,0,0,0,0,413,857,0,0,0,210,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,5,0,31,0,3322,74,35,930,11087,97,591,73,7078,71,9,1021,208,510,5036,102,4,1769,3239,43,1358,431,246,0,1354,1,0,0,0,0},
{10467,69458,282,32,0,3,0,0,554,0,107,0,9,7062,475,2320,2,0,0,0,0,0,0,0,0,0,0,467,1307,0,0,0,574,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,6,1,16,0,5,0,14522,557,5846,19681,8442,2452,1490,476,3363,89,344,10868,5875,21118,955,3049,521,32972,18046,7657,364,3732,1545,2916,3541,108,3,0,0,0},
{1277,16673,10,5,0,0,0,0,9,0,16,0,0,439,107,170,0,0,1,0,0,0,0,0,0,0,0,239,74,0,0,0,220,1,0,7,0,0,0,0,0,0,18,0,0,0,0,0,0,7,0,18,0,0,0,0,0,0,0,0,5,0,0,0,0,0,3465,3,1,3,3426,2214,4,6,4397,5,2,1321,6,6,9662,4,0,3327,73,1549,1948,0,2,0,221,0,0,0,0,0},
{1671,13433,277,22,0,1,0,0,37,0,9,0,0,1488,106,465,12,0,0,0,0,0,0,0,0,0,0,114,249,0,0,0,70,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,2881,17,0,79,5958,12,2093,7521,2891,1,4,1217,108,953,3366,8,0,3378,1189,232,1313,1,11,0,366,4,0,0,0,0},
{1523,13378,147,9,0,0,0,0,139,0,18,0,1,1418,167,363,1,0,1,0,0,0,0,0,0,0,0,62,227,0,0,1,63,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,24967,105,11,37,50491,105,16,52,20309,0,3,327,265,388,13723,13,4,1712,313,4947,2142,1,123,0,2240,0,0,0,0,0},
{208,93,3,2,0,0,0,0,19,0,1,0,0,35,49,37,3,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,4,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3439,1693,9639,7586,5606,3506,6392,19,22,11,1221,9543,7394,42810,8770,1510,128,6478,20656,21009,341,3913,7,1125,1,629,0,0,0,0},
{3,27,0,0,0,0,0,0,1,0,6,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,157,0,1,0,635,1,0,1,69,0,1,0,0,1,678,0,0,0,1,0,1041,0,0,0,0,0,0,0,0,0},
{786,3802,46,3,0,0,0,0,39,1,1,0,0,621,137,244,0,0,0,0,0,0,0,0,0,0,0,31,97,0,0,0,43,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,188,39,10,9,4896,19,22,28,2471,3,4,268,23,2307,104,21,1,21,1205,34,81,2,75,0,266,0,0,0,0,0},
{2310,13099,82,8,1,0,0,0,116,0,12,0,0,1643,243,535,10,1,0,0,1,2,3,0,4,0,10,93,237,0,0,0,67,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,8497,91,292,6521,14870,2050,163,29,10704,1,698,15890,806,34,7893,329,1,262,2322,1735,1770,621,449,0,6654,9,0,0,0,0},
{1141,7436,67,5,0,0,0,0,61,0,9,0,0,1191,54,531,5,0,0,4,0,0,0,0,0,0,0,83,221,0,0,0,57,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,10245,1244,9,9,12967,133,2,12,5289,0,0,102,1148,211,5707,3711,2,35,1922,16,2287,6,7,0,3004,0,0,0,0,0},
{4840,30095,202,33,0,0,0,0,1541,1,37,0,0,3341,274,1200,2,0,0,0,0,0,0,0,0,0,0,195,575,0,0,0,214,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,39,0,0,0,0,0,0,1,4,0,0,0,4331,126,6612,29115,11963,1078,20826,215,5883,213,1735,1146,193,1528,11572,94,158,101,6377,14767,1128,822,169,86,2557,134,0,0,0,0},
{1886,23192,105,9,0,0,0,0,191,0,7,0,1,1741,172,300,0,0,0,0,0,0,0,0,0,0,0,51,168,0,0,0,113,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1293,1457,2282,4329,715,15366,1439,225,2046,274,2009,5977,10031,26491,6706,3092,42,24753,5119,9961,26821,2909,9322,260,713,95,0,0,0,0},
{486,2371,45,15,0,0,0,0,45,0,23,0,1,427,82,180,0,0,0,4,0,0,2,0,0,0,0,22,70,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4765,32,8,8,6661,22,9,1599,2375,2,91,4019,116,10,4522,2295,0,5808,810,1493,2215,0,26,0,615,0,0,0,0,0},
{4,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2367,0,0,0,0,0,0,0,0,0},
{3113,23696,127,15,0,1,0,0,336,1,26,1,11,2901,214,891,2,0,0,0,0,0,0,0,0,0,0,165,419,0,0,0,184,2,0,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,9,0,0,0,10673,665,2088,5085,28364,533,1616,325,11580,33,1639,1572,2768,2979,13503,821,25,4284,6583,6797,2451,1165,262,4,4842,9,0,0,0,0},
{4274,44113,290,65,0,0,0,0,281,0,78,3,1,6442,258,2119,3,0,2,2,0,0,0,0,0,0,0,347,979,0,6,5,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,11,27,0,1,0,6927,552,2718,116,17713,335,102,7998,7627,6,1078,1128,1027,414,8281,2947,252,32,6606,18177,4468,23,1018,0,664,1,0,0,0,0},
{5253,47136,268,40,0,0,0,0,611,0,80,1,6,4525,414,1653,4,1,0,0,0,0,0,0,0,0,0,295,725,0,0,0,583,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,29,0,0,0,7764,46,757,23,18153,200,19,62850,14729,0,8,2359,233,187,21119,63,0,6556,4239,3446,4053,4,1456,1,3312,64,0,0,0,0},
{291,4266,26,0,0,0,0,0,156,0,1,0,0,357,9,120,0,0,0,0,2,0,0,0,0,0,0,28,43,0,0,0,80,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,1795,1434,3587,1868,2249,357,3661,29,2852,14,103,6719,2328,7873,249,2850,4,11183,9716,10142,23,23,3,69,99,68,0,0,0,0},
{27,8,0,0,0,0,0,0,12,0,18,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2000,0,0,2,15576,0,0,0,3688,0,1,2,3,0,1098,0,0,33,5,0,41,3,0,0,96,1,0,0,0,0},
{426,4511,67,6,0,0,0,0,24,0,7,0,0,709,80,229,0,0,0,0,0,0,0,0,0,0,0,24,80,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8566,34,5,126,5946,91,6,9100,9276,1,37,448,19,2083,5754,10,0,597,561,57,25,0,12,0,55,1,0,0,0,0},
{149,289,4,3,0,0,0,0,8,0,4,0,0,57,53,18,1,0,0,0,0,0,0,0,0,0,0,44,10,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,365,1,417,0,364,21,2,41,440,1,0,7,5,1,774,595,4,0,1,1182,37,1,6,1,94,0,0,0,0,0},
{3962,23694,183,25,0,0,0,0,318,0,30,0,0,3208,200,1054,4,0,0,0,0,0,0,0,0,0,0,196,428,0,0,0,241,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,297,175,132,74,1660,21,33,32,848,1,5,230,263,232,5969,380,1,392,2319,449,13,2,98,11,6,26,0,0,0,0},
{67,37,1,0,0,0,0,0,2,0,0,0,0,29,0,3,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,353,0,0,1,640,0,1,0,193,0,11,67,2,0,133,3,0,2,2,2,17,2,4,0,71,117,0,0,0,0},
{40,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,12,4,3,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,1,1},
{519282,519312,3019,10267,186,205,19,85,7407,1290,1449,1656,7558,44825,6048,16338,282,1050,989,743,502,364,395,310,349,292,523,3088,7026,193,519270,259,3950,36,12196,4120,5144,4760,5130,2807,2617,5209,13065,844,956,3912,3951,4160,5434,2792,1156,3558,6565,8312,1478,812,3659,224,1311,444,448,232,447,2,70,1180,200766,34325,61717,99830,263680,50941,51565,139816,163910,2625,17950,101173,58938,165530,191668,41303,2376,142791,149778,213266,74684,22618,49027,5011,47216,1765,84,519268,40,7},
{519338,519262,3019,519264,186,205,19,85,7407,1290,1449,1656,7558,44825,6048,16338,282,1050,989,743,502,364,395,310,349,292,523,3088,7026,193,2734,259,3950,36,12196,4120,5144,4760,5130,2807,2617,5209,13065,844,956,3912,3951,4160,5434,2792,1156,3558,6565,8312,1478,812,3659,224,1311,444,448,232,447,2,70,1180,200766,34325,61717,99830,263680,50941,51565,139816,163910,2625,17950,101173,58938,165530,191668,41303,2376,142791,149778,213266,74684,22618,49027,5011,47216,1765,84,42,40,519264},
{0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0},
}};
#else
#include "weights.h"
#endif

// Whould be really really cool to make this constexpr.
void build_trees() {
	for (UT i = 0; i < FREQ.size(); i++) {
		TREES.emplace_back(FREQ[i]);
	}
}
